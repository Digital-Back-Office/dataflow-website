---
import { getEntry } from "astro:content";

const Data = await getEntry("Home", "home");
const data = Data.data.cta;
---

<div id="animatedouterdiv" class="cta-container pt-10 w-full flex justify-center items-end h-[650px]">
  <div id="animatedDiv" class="responsive-container  w-[70%] bg-[#2FB7B8] rounded-t-[60px] flex flex-col items-center justify-center">
    <p id="titleText" class=" text-4calc font-bold text-center text-white w-3/5" style="font-family: Arimo;" >{data.title}</p>
    <p id="descText" class="text-lg text-center text-white mt-5 w-3/6 width90" style="font-family: Arimo;" >{data.description}</p>
    <a class="custom-button transition-all duration-300 ease-in-out w-2/4 bg-white h-16 rounded-lg mt-10 flex items-center justify-center   min-h-12 group" style="font-family: Arimo;" href="Contact-us">
      <p class="transition-all duration-200 text-2xl font-bold text-primary text-center group-hover:text-[30px]">{data.button}</p>
    </a>
  </div>
</div>

<style>
  @media (max-width: 500px) {

    .cta-container{
      height: 500px;
    }
    .responsive-container {
      height: 400px;
      width: 100%;
      flex-direction: column;
      padding-top: 20px;
      padding-bottom: 20px;
    }
    .custom-button {
      width: 90%;
      margin-top: 20px;
    }
    p {
      font-size: 20px;
    }
    .cta-container{
  padding-top: 30px;
    }
    .width90{
      width: 90%;
    }
  }

  @keyframes fadeInUp {
    0% {
      height: 0;
      width: 100px;
      opacity: 0;
    }
    100% {
      height:500px ;
      width: 70%;
      transform: translateY(0%);
      opacity: 1;
    }
  }

  @keyframes fadeOutDown {
    0% {
      height: auto;
      width: 70%;
      opacity: 1;
    }
    100% {
      height: 0vh;
      width: 1px;
      opacity: 0;
    }
  }

  @keyframes fadeInUpSmall {
    0% {
      height: 10vh;
      width: 100px;
      opacity: 0;
    }
    100% {
      height:auto;
      width: 100%;
      transform: translateY(0%);
      opacity: 1;
    }
  }

  @keyframes fadeOutDownSmall {
    0% {
      height: 400px;
      width: 100%;
      opacity: 0;
    }
    100% {
       height: 600px;
      width: 100%;
      opacity: 0;
    }
  }

  @keyframes fadeIn {
    0% {
      opacity: 0;
    }
    50%{
      opacity: 0;
    }
    100% {
      opacity: 1;
    }
  }

  @keyframes fadeOut {
    0% {
      opacity: 1;
    }
    50%{
      opacity: 0;
    }
    100% {
      opacity: 0;
    }
  }

  .fadeInUp-animation {
    animation: fadeInUp 1s forwards;
  }

  .fadeOutDown-animation {
    animation: fadeOutDown 1s forwards;
  }

  .fadeInUpSmall-animation {
    animation: fadeInUpSmall 1s forwards;
  }

  .fadeOutDownSmall-animation {
    animation: fadeOutDownSmall 1s forwards;
  }

  .fadeIn-animation {
    animation: fadeIn 1s forwards;
  }

  .fadeOut-animation {
    animation: fadeOut 1s forwards;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const animatedouterdiv = document.getElementById('animatedouterdiv');
    const animatedDiv = document.getElementById('animatedDiv');
    const titleText = document.getElementById('titleText');
    const descText = document.getElementById('descText');

    const observer = new IntersectionObserver(entries => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          if (window.innerWidth <= 600) {
            animatedDiv.classList.remove('fadeOutDownSmall-animation');
            animatedDiv.classList.add('fadeInUpSmall-animation');
            titleText.classList.remove('fadeOut-animation');
            titleText.classList.add('fadeIn-animation');
            descText.classList.remove('fadeOut-animation');
            descText.classList.add('fadeIn-animation');
          } else {
            animatedDiv.classList.remove('fadeOutDown-animation');
            animatedDiv.classList.add('fadeInUp-animation');
            titleText.classList.remove('fadeOut-animation');
            titleText.classList.add('fadeIn-animation');
            descText.classList.remove('fadeOut-animation');
            descText.classList.add('fadeIn-animation');
          }
        } else {
          if (window.innerWidth <= 600) {
            animatedDiv.classList.remove('fadeInUpSmall-animation');
            animatedDiv.classList.add('fadeOutDownSmall-animation');
            titleText.classList.remove('fadeIn-animation');
            titleText.classList.add('fadeOut-animation');
            descText.classList.remove('fadeIn-animation');
            descText.classList.add('fadeOut-animation');
          } else {
            animatedDiv.classList.remove('fadeInUp-animation');
            animatedDiv.classList.add('fadeOutDown-animation');
            titleText.classList.remove('fadeIn-animation');
            titleText.classList.add('fadeOut-animation');
            descText.classList.remove('fadeIn-animation');
            descText.classList.add('fadeOut-animation');
          }
        }
      });
    }, {
      threshold: 0.20 
    });

    observer.observe(animatedouterdiv);
  });
</script>
